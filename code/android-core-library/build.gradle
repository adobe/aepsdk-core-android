apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'org.jlleitschuh.gradle.ktlint'
apply plugin: 'org.jetbrains.dokka'

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 19
        //noinspection OldTargetApi
        targetSdkVersion 30
        //Include the Proguard rules for Core Extension in the aar
        consumerProguardFiles 'lib-proguard-rules.pro'
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    sourceSets {
        test{
            java{
                srcDirs += "src/legacy/test-common/java"
                srcDirs += "src/legacy/test-module/java"
                srcDirs += "src/test/kotlin"
            }
            resources{
                srcDirs += "src/legacy/test-module/resources"
            }
        }
        main{
            java{
                srcDirs += "src/legacy/main/java"
            }
        }
        androidTest{
            java.srcDirs += "src/legacy/androidTest-common/java"
        }
    }

    testOptions {
        unitTests.all{
            jacoco{
                includeNoLocationClasses = true
                excludes = ['jdk.internal.*']
            }
        }
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }

    flavorDimensions "target"

    productFlavors {
        phone {
            dimension "target"
        }
    }

    buildTypes {
        debug {
            testCoverageEnabled true
            debuggable true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
}
apply plugin: 'jacoco'
task jacocoTestReport(type: JacocoReport, dependsOn: ['testPhoneDebugUnitTest','createPhoneDebugCoverageReport']) {

    def debugTree = fileTree(dir: "${project.buildDir}/intermediates/javac/phoneDebug/classes")

    additionalClassDirs.setFrom files([debugTree])
    additionalSourceDirs.setFrom files(android.sourceSets.phone.java.sourceFiles)
    sourceDirectories.setFrom files(android.sourceSets.main.java.sourceFiles)
    executionData.setFrom fileTree(dir: "$buildDir", includes: [
            "jacoco/testPhoneDebugUnitTest.exec",
            "outputs/code_coverage/phoneDebugAndroidTest/connected/*coverage.ec"
    ])
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled true
    }
}

android.libraryVariants.all { variant ->
    tasks.withType(Javadoc) {
        source = [android.sourceSets.main.java.sourceFiles, android.sourceSets.phone.java.sourceFiles]
        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"

        doFirst{classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)}

        exclude "**/BuildConfig.java"
        exclude "**/R.java"
        options {
            links "https://developer.android.com/reference"
        }
    }
}


apply from: 'checkStyle.gradle'
apply from: 'release.gradle'
//apply from: 'jacoco.gradle'

dependencies {
    //noinspection GradleCompatible
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    // unit tests
    testImplementation "junit:junit:4.13.2"
    //noinspection GradleDependency
    testImplementation "org.mockito:mockito-core:2.22.0"
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.0'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.0'
    testImplementation 'commons-codec:commons-codec:1.15'
    testImplementation 'org.robolectric:robolectric:3.6.2'
    //noinspection GradleDependency
    testImplementation 'org.json:json:20160810'
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    // instrumentation tests
    androidTestImplementation 'androidx.test:rules:1.1.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
}

repositories {
    mavenCentral()
}
